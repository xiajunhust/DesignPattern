装饰者模式
动态地给一个对象添加一些额外的职责，就增加功能来说，装饰者模式比生成子类更加灵活。


本装饰者模式实例，实现的是给人穿衣服的例子。可以给人按不同顺序穿不同的衣服。

以前的系统，需要增加新的功能的时候，是向旧的类中添加新的代码。这些信的代码通常装饰了原有的类的核心职责或主要行为。这种做法的问题在于，增加了主类的复杂度。这些新加的东西仅仅是为了满足一些只在特定情况下才会执行的特殊行为的需要。

装饰者模式是一种很好的解决方案。把每个要装饰的功能放在单独的类中，并让这个类包装它所装饰的对象。这样当需要执行特殊行为时，客户代码就可以在运行依据需要有选择的、按顺序的使用装饰功能包装对象。


这样做最大的好处就是有效的把类的核心职责和装饰功能区分开了。而且可以去除相关类中重复的装饰逻辑。
